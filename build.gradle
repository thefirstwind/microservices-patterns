buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:$springDependencyManagementPluginVersion"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:$dockerComposePluginVersion"
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:$springCloudContractDependenciesVersion"    }

}

plugins {
    id "com.github.ben-manes.versions" version "0.20.0"
}

apply plugin: WaitForMySqlPlugin
apply plugin: 'docker-compose'

subprojects {

    apply plugin: "java"

    // TODO apply plugin: 'pmd'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    group = "net.chrisrichardson.ftgo"

    repositories {
        eventuateMavenRepoUrl.split('[ ,]').each { repoUrl -> maven { url repoUrl.trim() } }

        mavenCentral()
        jcenter()

        maven {
            url 'https://jitpack.io'
        }

        maven {
            url "${project.rootDir}/build/repo"
        }

    }

}

task buildContracts(type: GradleBuild) {
  tasks = subprojects.collect { it.name }.findAll { it.endsWith("-contracts") }.collect { ":" + it + ":publish"}
}

task compileAll(type: GradleBuild) {
  tasks = ["testClasses", "compileIntegrationTestJava", "compileComponentTestJava"]
}

dockerCompose {
  projectName = null
  removeOrphans = true
  if (project.hasProperty('startedServices'))
    startedServices= project.ext.startedServices.split(',')

}
